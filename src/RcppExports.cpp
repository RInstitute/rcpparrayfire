// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/RcppArrayFire.h"
#include <Rcpp.h>

using namespace Rcpp;

// arrayfire_device_info
Rcpp::List arrayfire_device_info();
RcppExport SEXP _RcppArrayFire_arrayfire_device_info() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(arrayfire_device_info());
    return rcpp_result_gen;
END_RCPP
}
// arrayfire_set_device
void arrayfire_set_device(const int index);
RcppExport SEXP _RcppArrayFire_arrayfire_set_device(SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type index(indexSEXP);
    arrayfire_set_device(index);
    return R_NilValue;
END_RCPP
}
// arrayfire_get_device
int arrayfire_get_device();
RcppExport SEXP _RcppArrayFire_arrayfire_get_device() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(arrayfire_get_device());
    return rcpp_result_gen;
END_RCPP
}
// arrayfire_count_device
int arrayfire_count_device();
RcppExport SEXP _RcppArrayFire_arrayfire_count_device() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(arrayfire_count_device());
    return rcpp_result_gen;
END_RCPP
}
// arrayfire_info
void arrayfire_info(const bool verbose);
RcppExport SEXP _RcppArrayFire_arrayfire_info(SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const bool >::type verbose(verboseSEXP);
    arrayfire_info(verbose);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppArrayFire_arrayfire_device_info", (DL_FUNC) &_RcppArrayFire_arrayfire_device_info, 0},
    {"_RcppArrayFire_arrayfire_set_device", (DL_FUNC) &_RcppArrayFire_arrayfire_set_device, 1},
    {"_RcppArrayFire_arrayfire_get_device", (DL_FUNC) &_RcppArrayFire_arrayfire_get_device, 0},
    {"_RcppArrayFire_arrayfire_count_device", (DL_FUNC) &_RcppArrayFire_arrayfire_count_device, 0},
    {"_RcppArrayFire_arrayfire_info", (DL_FUNC) &_RcppArrayFire_arrayfire_info, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppArrayFire(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
